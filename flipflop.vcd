$date
	Fri Sep 08 22:32:55 2017
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module flipflop $end
$var wire 1 ! qp $end
$var wire 1 " q $end
$var wire 1 # kf $end
$var wire 1 $ j $end
$var wire 1 % clock $end
$var reg 3 & k [2:0] $end
$var integer 32 ' loop1 [31:0] $end
$var integer 32 ( loop2 [31:0] $end
$var integer 32 ) nTestbit [31:0] $end
$var integer 32 * nTestcase [31:0] $end
$scope module J1 $end
$var wire 1 % clock $end
$var wire 1 $ j $end
$var wire 1 # k $end
$var wire 1 ! qp $end
$var wire 1 " q $end
$var wire 1 + k1 $end
$var wire 1 , j1 $end
$var wire 1 - d $end
$scope module A1 $end
$var wire 1 $ i1 $end
$var wire 1 , o $end
$var wire 1 ! i2 $end
$upscope $end
$scope module A2 $end
$var wire 1 . i1 $end
$var wire 1 + o $end
$var wire 1 " i2 $end
$upscope $end
$scope module D1 $end
$var wire 1 % clock $end
$var wire 1 ! qp $end
$var wire 1 " q $end
$var wire 1 / d2 $end
$var wire 1 - d $end
$scope module D1 $end
$var wire 1 0 clock $end
$var wire 1 1 s $end
$var wire 1 2 r $end
$var wire 1 3 qp $end
$var wire 1 / q $end
$var wire 1 - d $end
$scope module A1 $end
$var wire 1 0 i1 $end
$var wire 1 1 o $end
$var wire 1 - i2 $end
$upscope $end
$scope module A2 $end
$var wire 1 0 i1 $end
$var wire 1 4 i2 $end
$var wire 1 2 o $end
$upscope $end
$scope module S1 $end
$var wire 1 5 clr $end
$var wire 1 6 pre $end
$var wire 1 / q $end
$var wire 1 3 qp $end
$var wire 1 2 r $end
$var wire 1 1 s $end
$upscope $end
$upscope $end
$scope module D2 $end
$var wire 1 % clock $end
$var wire 1 / d $end
$var wire 1 7 s $end
$var wire 1 8 r $end
$var wire 1 ! qp $end
$var wire 1 " q $end
$scope module A1 $end
$var wire 1 % i1 $end
$var wire 1 / i2 $end
$var wire 1 7 o $end
$upscope $end
$scope module A2 $end
$var wire 1 % i1 $end
$var wire 1 9 i2 $end
$var wire 1 8 o $end
$upscope $end
$scope module S1 $end
$var wire 1 : clr $end
$var wire 1 ; pre $end
$var wire 1 " q $end
$var wire 1 ! qp $end
$var wire 1 8 r $end
$var wire 1 7 s $end
$upscope $end
$upscope $end
$upscope $end
$scope module O1 $end
$var wire 1 , i1 $end
$var wire 1 + i2 $end
$var wire 1 - o $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
z;
z:
19
08
07
z6
z5
14
x3
12
01
10
0/
0.
0-
0,
0+
b1000 *
b11 )
b11 (
b111 '
b1 &
0%
0$
1#
x"
x!
$end
#10
x9
x7
x/
02
x"
00
x8
1%
b101 &
b11 (
b110 '
#20
x9
x/
x4
x1
x2
x-
10
07
08
x,
0%
1$
b11 &
b11 (
b101 '
#30
01
02
00
x7
x8
1%
b111 &
b11 (
b100 '
#40
x1
x2
10
07
08
0%
b11 &
b11 (
b11 '
#50
01
02
00
x7
x8
1%
b111 &
b11 (
b10 '
#60
x1
x2
10
07
08
0%
b11 &
b11 (
b1 '
#70
01
02
00
x7
x8
1%
b111 &
b11 (
b0 '
#80
b11111111111111111111111111111111 '
